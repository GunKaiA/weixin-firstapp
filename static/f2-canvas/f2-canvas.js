'use strict';

var _renderer = require('./lib/renderer.js');

var _renderer2 = _interopRequireDefault(_renderer);

var _f = require('./lib/f2.js');

var _f2 = _interopRequireDefault(_f);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// 适配小程序的事件机制
// f2-canvas.js
_f2.default.Util.addEventListener = function (source, type, listener) {
  source.addListener(type, listener);
};

_f2.default.Util.removeEventListener = function (source, type, listener) {
  source.removeListener(type, listener);
};

_f2.default.Util.createEvent = function (event, chart) {
  var type = event.type;
  var x = 0;
  var y = 0;
  var touches = event.touches;
  if (touches && touches.length > 0) {
    x = touches[0].x;
    y = touches[0].y;
  }

  return {
    type: type,
    chart: chart,
    x: x,
    y: y
  };
};

Component({
  /**
   * 组件的属性列表
   */
  properties: {
    canvasId: {
      type: String,
      value: 'f2-canvas'
    },

    opts: {
      type: Object
    }
  },

  /**
   * 组件的初始数据
   */
  data: {},

  ready: function ready() {
    if (!this.data.opts) {
      console.warn('组件需绑定 opts 变量，例：<ff-canvas id="mychart-dom-bar" ' + 'canvas-id="mychart-bar" opts="{{ opts }}"></ff-canvas>');
      return;
    }

    if (!this.data.opts.lazyLoad) {
      this.init();
    }
  },

  /**
   * 组件的方法列表
   */
  methods: {
    init: function init(callback) {
      var _this = this;

      var version = wx.version.version.split('.').map(function (n) {
        return parseInt(n, 10);
      });
      var isValid = version[0] > 1 || version[0] === 1 && version[1] > 9 || version[0] === 1 && version[1] === 9 && version[2] >= 91;
      if (!isValid) {
        console.error('微信基础库版本过低，需大于等于 1.9.91。');
        return;
      }

      var ctx = wx.createCanvasContext(this.data.canvasId, this); // 获取小程序上下文
      var canvas = new _renderer2.default(ctx);
      this.canvas = canvas;

      var query = wx.createSelectorQuery().in(this);
      query.select('.f2-canvas').boundingClientRect(function (res) {
        if (typeof callback === 'function') {
          _this.chart = callback(canvas, res.width, res.height);
        } else if (_this.data.opts && _this.data.opts.onInit) {
          _this.chart = _this.data.opts.onInit(canvas, res.width, res.height);
        }
      }).exec();
    },
    touchStart: function touchStart(e) {
      if (this.canvas) {
        this.canvas.emitEvent('touchstart', [e]);
      }
    },
    touchMove: function touchMove(e) {
      if (this.canvas) {
        this.canvas.emitEvent('touchmove', [e]);
      }
    },
    touchEnd: function touchEnd(e) {
      if (this.canvas) {
        this.canvas.emitEvent('touchend', [e]);
      }
    },
    press: function press(e) {
      if (this.canvas) {
        this.canvas.emitEvent('press', [e]);
      }
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,